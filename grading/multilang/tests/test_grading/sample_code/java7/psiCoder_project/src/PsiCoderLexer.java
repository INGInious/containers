// Generated from PsiCoder.g by ANTLR 4.5.3
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PsiCoderLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, COMMENT=24, 
		LINE_COMMENT=25, WS=26, TIPO2=27, TK_ROMPER=28, TK_REAL=29, TK_BOOLEANO=30, 
		TK_ENTERO=31, TK_CADENA=32, TK_CARACTER=33, TK_MULT=34, TK_SUMA=35, TK_COMPARACION=36, 
		TK_IGUALDAD=37, TK_IGUAL=38, TK_PYC=39, TK_PI=40, TK_PD=41, TK_PUNTO=42, 
		TK_DOSPUNTOS=43, TK_OR=44, TK_AND=45, TK_DIFERENTE=46, TK_COMA=47, ID=48;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "COMMENT", "LINE_COMMENT", 
		"WS", "TIPO2", "TK_ROMPER", "TK_REAL", "TK_BOOLEANO", "TK_ENTERO", "TK_CADENA", 
		"TK_CARACTER", "TK_MULT", "TK_SUMA", "TK_COMPARACION", "TK_IGUALDAD", 
		"TK_IGUAL", "TK_PYC", "TK_PI", "TK_PD", "TK_PUNTO", "TK_DOSPUNTOS", "TK_OR", 
		"TK_AND", "TK_DIFERENTE", "TK_COMA", "ID"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'funcion_principal'", "'fin_principal'", "'funcion'", "'hacer'", 
		"'retornar'", "'fin_funcion'", "'estructura'", "'fin_estructura'", "'imprimir'", 
		"'leer'", "'si'", "'entonces'", "'fin_si'", "'si_no'", "'mientras'", "'fin_mientras'", 
		"'para'", "'fin_para'", "'seleccionar'", "'entre'", "'fin_seleccionar'", 
		"'caso'", "'defecto'", null, null, null, null, "'romper'", null, null, 
		null, null, null, null, null, null, null, "'='", "';'", "'('", "')'", 
		"'.'", "':'", "'||'", "'&&'", "'!'", "','"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"COMMENT", "LINE_COMMENT", "WS", "TIPO2", "TK_ROMPER", "TK_REAL", "TK_BOOLEANO", 
		"TK_ENTERO", "TK_CADENA", "TK_CARACTER", "TK_MULT", "TK_SUMA", "TK_COMPARACION", 
		"TK_IGUALDAD", "TK_IGUAL", "TK_PYC", "TK_PI", "TK_PD", "TK_PUNTO", "TK_DOSPUNTOS", 
		"TK_OR", "TK_AND", "TK_DIFERENTE", "TK_COMA", "ID"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PsiCoderLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PsiCoder.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\62\u01e2\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3"+
		"\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3"+
		"\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\7\31\u013f\n\31\f\31"+
		"\16\31\u0142\13\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\7\32\u014d"+
		"\n\32\f\32\16\32\u0150\13\32\3\32\3\32\3\33\6\33\u0155\n\33\r\33\16\33"+
		"\u0156\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u017b\n\34\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\36\7\36\u0185\n\36\f\36\16\36\u0188\13\36\3\36\3\36"+
		"\6\36\u018c\n\36\r\36\16\36\u018d\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3\37\5\37\u019e\n\37\3 \6 \u01a1\n \r \16"+
		" \u01a2\3!\3!\3!\3!\7!\u01a9\n!\f!\16!\u01ac\13!\3!\3!\3\"\3\"\3\"\3\""+
		"\3#\3#\3$\3$\3%\3%\3%\3%\3%\3%\5%\u01be\n%\3&\3&\3&\3&\5&\u01c4\n&\3\'"+
		"\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3"+
		"\61\3\61\7\61\u01de\n\61\f\61\16\61\u01e1\13\61\3\u0140\2\62\3\3\5\4\7"+
		"\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62\3\2\f\4\2\f\f\17\17\5\2\13\f\17"+
		"\17\"\"\3\2\62;\3\2\60\60\5\2\f\f\17\17$$\3\2))\5\2\'\',,\61\61\4\2--"+
		"//\4\2C\\c|\7\2//\62;C\\aac|\u01f3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2"+
		"\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3c\3\2\2\2\5u\3\2\2\2\7\u0083"+
		"\3\2\2\2\t\u008b\3\2\2\2\13\u0091\3\2\2\2\r\u009a\3\2\2\2\17\u00a6\3\2"+
		"\2\2\21\u00b1\3\2\2\2\23\u00c0\3\2\2\2\25\u00c9\3\2\2\2\27\u00ce\3\2\2"+
		"\2\31\u00d1\3\2\2\2\33\u00da\3\2\2\2\35\u00e1\3\2\2\2\37\u00e7\3\2\2\2"+
		"!\u00f0\3\2\2\2#\u00fd\3\2\2\2%\u0102\3\2\2\2\'\u010b\3\2\2\2)\u0117\3"+
		"\2\2\2+\u011d\3\2\2\2-\u012d\3\2\2\2/\u0132\3\2\2\2\61\u013a\3\2\2\2\63"+
		"\u0148\3\2\2\2\65\u0154\3\2\2\2\67\u017a\3\2\2\29\u017c\3\2\2\2;\u0186"+
		"\3\2\2\2=\u019d\3\2\2\2?\u01a0\3\2\2\2A\u01a4\3\2\2\2C\u01af\3\2\2\2E"+
		"\u01b3\3\2\2\2G\u01b5\3\2\2\2I\u01bd\3\2\2\2K\u01c3\3\2\2\2M\u01c5\3\2"+
		"\2\2O\u01c7\3\2\2\2Q\u01c9\3\2\2\2S\u01cb\3\2\2\2U\u01cd\3\2\2\2W\u01cf"+
		"\3\2\2\2Y\u01d1\3\2\2\2[\u01d4\3\2\2\2]\u01d7\3\2\2\2_\u01d9\3\2\2\2a"+
		"\u01db\3\2\2\2cd\7h\2\2de\7w\2\2ef\7p\2\2fg\7e\2\2gh\7k\2\2hi\7q\2\2i"+
		"j\7p\2\2jk\7a\2\2kl\7r\2\2lm\7t\2\2mn\7k\2\2no\7p\2\2op\7e\2\2pq\7k\2"+
		"\2qr\7r\2\2rs\7c\2\2st\7n\2\2t\4\3\2\2\2uv\7h\2\2vw\7k\2\2wx\7p\2\2xy"+
		"\7a\2\2yz\7r\2\2z{\7t\2\2{|\7k\2\2|}\7p\2\2}~\7e\2\2~\177\7k\2\2\177\u0080"+
		"\7r\2\2\u0080\u0081\7c\2\2\u0081\u0082\7n\2\2\u0082\6\3\2\2\2\u0083\u0084"+
		"\7h\2\2\u0084\u0085\7w\2\2\u0085\u0086\7p\2\2\u0086\u0087\7e\2\2\u0087"+
		"\u0088\7k\2\2\u0088\u0089\7q\2\2\u0089\u008a\7p\2\2\u008a\b\3\2\2\2\u008b"+
		"\u008c\7j\2\2\u008c\u008d\7c\2\2\u008d\u008e\7e\2\2\u008e\u008f\7g\2\2"+
		"\u008f\u0090\7t\2\2\u0090\n\3\2\2\2\u0091\u0092\7t\2\2\u0092\u0093\7g"+
		"\2\2\u0093\u0094\7v\2\2\u0094\u0095\7q\2\2\u0095\u0096\7t\2\2\u0096\u0097"+
		"\7p\2\2\u0097\u0098\7c\2\2\u0098\u0099\7t\2\2\u0099\f\3\2\2\2\u009a\u009b"+
		"\7h\2\2\u009b\u009c\7k\2\2\u009c\u009d\7p\2\2\u009d\u009e\7a\2\2\u009e"+
		"\u009f\7h\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7e\2\2"+
		"\u00a2\u00a3\7k\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7p\2\2\u00a5\16\3\2"+
		"\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7v\2\2\u00a9\u00aa"+
		"\7t\2\2\u00aa\u00ab\7w\2\2\u00ab\u00ac\7e\2\2\u00ac\u00ad\7v\2\2\u00ad"+
		"\u00ae\7w\2\2\u00ae\u00af\7t\2\2\u00af\u00b0\7c\2\2\u00b0\20\3\2\2\2\u00b1"+
		"\u00b2\7h\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5\7a\2\2"+
		"\u00b5\u00b6\7g\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9"+
		"\7t\2\2\u00b9\u00ba\7w\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7v\2\2\u00bc"+
		"\u00bd\7w\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7c\2\2\u00bf\22\3\2\2\2\u00c0"+
		"\u00c1\7k\2\2\u00c1\u00c2\7o\2\2\u00c2\u00c3\7r\2\2\u00c3\u00c4\7t\2\2"+
		"\u00c4\u00c5\7k\2\2\u00c5\u00c6\7o\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8"+
		"\7t\2\2\u00c8\24\3\2\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc"+
		"\7g\2\2\u00cc\u00cd\7t\2\2\u00cd\26\3\2\2\2\u00ce\u00cf\7u\2\2\u00cf\u00d0"+
		"\7k\2\2\u00d0\30\3\2\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4"+
		"\7v\2\2\u00d4\u00d5\7q\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7e\2\2\u00d7"+
		"\u00d8\7g\2\2\u00d8\u00d9\7u\2\2\u00d9\32\3\2\2\2\u00da\u00db\7h\2\2\u00db"+
		"\u00dc\7k\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7a\2\2\u00de\u00df\7u\2\2"+
		"\u00df\u00e0\7k\2\2\u00e0\34\3\2\2\2\u00e1\u00e2\7u\2\2\u00e2\u00e3\7"+
		"k\2\2\u00e3\u00e4\7a\2\2\u00e4\u00e5\7p\2\2\u00e5\u00e6\7q\2\2\u00e6\36"+
		"\3\2\2\2\u00e7\u00e8\7o\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7g\2\2\u00ea"+
		"\u00eb\7p\2\2\u00eb\u00ec\7v\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee\7c\2\2"+
		"\u00ee\u00ef\7u\2\2\u00ef \3\2\2\2\u00f0\u00f1\7h\2\2\u00f1\u00f2\7k\2"+
		"\2\u00f2\u00f3\7p\2\2\u00f3\u00f4\7a\2\2\u00f4\u00f5\7o\2\2\u00f5\u00f6"+
		"\7k\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7p\2\2\u00f8\u00f9\7v\2\2\u00f9"+
		"\u00fa\7t\2\2\u00fa\u00fb\7c\2\2\u00fb\u00fc\7u\2\2\u00fc\"\3\2\2\2\u00fd"+
		"\u00fe\7r\2\2\u00fe\u00ff\7c\2\2\u00ff\u0100\7t\2\2\u0100\u0101\7c\2\2"+
		"\u0101$\3\2\2\2\u0102\u0103\7h\2\2\u0103\u0104\7k\2\2\u0104\u0105\7p\2"+
		"\2\u0105\u0106\7a\2\2\u0106\u0107\7r\2\2\u0107\u0108\7c\2\2\u0108\u0109"+
		"\7t\2\2\u0109\u010a\7c\2\2\u010a&\3\2\2\2\u010b\u010c\7u\2\2\u010c\u010d"+
		"\7g\2\2\u010d\u010e\7n\2\2\u010e\u010f\7g\2\2\u010f\u0110\7e\2\2\u0110"+
		"\u0111\7e\2\2\u0111\u0112\7k\2\2\u0112\u0113\7q\2\2\u0113\u0114\7p\2\2"+
		"\u0114\u0115\7c\2\2\u0115\u0116\7t\2\2\u0116(\3\2\2\2\u0117\u0118\7g\2"+
		"\2\u0118\u0119\7p\2\2\u0119\u011a\7v\2\2\u011a\u011b\7t\2\2\u011b\u011c"+
		"\7g\2\2\u011c*\3\2\2\2\u011d\u011e\7h\2\2\u011e\u011f\7k\2\2\u011f\u0120"+
		"\7p\2\2\u0120\u0121\7a\2\2\u0121\u0122\7u\2\2\u0122\u0123\7g\2\2\u0123"+
		"\u0124\7n\2\2\u0124\u0125\7g\2\2\u0125\u0126\7e\2\2\u0126\u0127\7e\2\2"+
		"\u0127\u0128\7k\2\2\u0128\u0129\7q\2\2\u0129\u012a\7p\2\2\u012a\u012b"+
		"\7c\2\2\u012b\u012c\7t\2\2\u012c,\3\2\2\2\u012d\u012e\7e\2\2\u012e\u012f"+
		"\7c\2\2\u012f\u0130\7u\2\2\u0130\u0131\7q\2\2\u0131.\3\2\2\2\u0132\u0133"+
		"\7f\2\2\u0133\u0134\7g\2\2\u0134\u0135\7h\2\2\u0135\u0136\7g\2\2\u0136"+
		"\u0137\7e\2\2\u0137\u0138\7v\2\2\u0138\u0139\7q\2\2\u0139\60\3\2\2\2\u013a"+
		"\u013b\7\61\2\2\u013b\u013c\7,\2\2\u013c\u0140\3\2\2\2\u013d\u013f\13"+
		"\2\2\2\u013e\u013d\3\2\2\2\u013f\u0142\3\2\2\2\u0140\u0141\3\2\2\2\u0140"+
		"\u013e\3\2\2\2\u0141\u0143\3\2\2\2\u0142\u0140\3\2\2\2\u0143\u0144\7,"+
		"\2\2\u0144\u0145\7\61\2\2\u0145\u0146\3\2\2\2\u0146\u0147\b\31\2\2\u0147"+
		"\62\3\2\2\2\u0148\u0149\7\61\2\2\u0149\u014a\7\61\2\2\u014a\u014e\3\2"+
		"\2\2\u014b\u014d\n\2\2\2\u014c\u014b\3\2\2\2\u014d\u0150\3\2\2\2\u014e"+
		"\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0151\3\2\2\2\u0150\u014e\3\2"+
		"\2\2\u0151\u0152\b\32\2\2\u0152\64\3\2\2\2\u0153\u0155\t\3\2\2\u0154\u0153"+
		"\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157"+
		"\u0158\3\2\2\2\u0158\u0159\b\33\2\2\u0159\66\3\2\2\2\u015a\u015b\7d\2"+
		"\2\u015b\u015c\7q\2\2\u015c\u015d\7q\2\2\u015d\u015e\7n\2\2\u015e\u015f"+
		"\7g\2\2\u015f\u0160\7c\2\2\u0160\u0161\7p\2\2\u0161\u017b\7q\2\2\u0162"+
		"\u0163\7g\2\2\u0163\u0164\7p\2\2\u0164\u0165\7v\2\2\u0165\u0166\7g\2\2"+
		"\u0166\u0167\7t\2\2\u0167\u017b\7q\2\2\u0168\u0169\7t\2\2\u0169\u016a"+
		"\7g\2\2\u016a\u016b\7c\2\2\u016b\u017b\7n\2\2\u016c\u016d\7e\2\2\u016d"+
		"\u016e\7c\2\2\u016e\u016f\7f\2\2\u016f\u0170\7g\2\2\u0170\u0171\7p\2\2"+
		"\u0171\u017b\7c\2\2\u0172\u0173\7e\2\2\u0173\u0174\7c\2\2\u0174\u0175"+
		"\7t\2\2\u0175\u0176\7c\2\2\u0176\u0177\7e\2\2\u0177\u0178\7v\2\2\u0178"+
		"\u0179\7g\2\2\u0179\u017b\7t\2\2\u017a\u015a\3\2\2\2\u017a\u0162\3\2\2"+
		"\2\u017a\u0168\3\2\2\2\u017a\u016c\3\2\2\2\u017a\u0172\3\2\2\2\u017b8"+
		"\3\2\2\2\u017c\u017d\7t\2\2\u017d\u017e\7q\2\2\u017e\u017f\7o\2\2\u017f"+
		"\u0180\7r\2\2\u0180\u0181\7g\2\2\u0181\u0182\7t\2\2\u0182:\3\2\2\2\u0183"+
		"\u0185\t\4\2\2\u0184\u0183\3\2\2\2\u0185\u0188\3\2\2\2\u0186\u0184\3\2"+
		"\2\2\u0186\u0187\3\2\2\2\u0187\u0189\3\2\2\2\u0188\u0186\3\2\2\2\u0189"+
		"\u018b\t\5\2\2\u018a\u018c\t\4\2\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2"+
		"\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e<\3\2\2\2\u018f\u0190"+
		"\7x\2\2\u0190\u0191\7g\2\2\u0191\u0192\7t\2\2\u0192\u0193\7f\2\2\u0193"+
		"\u0194\7c\2\2\u0194\u0195\7f\2\2\u0195\u0196\7g\2\2\u0196\u0197\7t\2\2"+
		"\u0197\u019e\7q\2\2\u0198\u0199\7h\2\2\u0199\u019a\7c\2\2\u019a\u019b"+
		"\7n\2\2\u019b\u019c\7u\2\2\u019c\u019e\7q\2\2\u019d\u018f\3\2\2\2\u019d"+
		"\u0198\3\2\2\2\u019e>\3\2\2\2\u019f\u01a1\t\4\2\2\u01a0\u019f\3\2\2\2"+
		"\u01a1\u01a2\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3@\3"+
		"\2\2\2\u01a4\u01aa\7$\2\2\u01a5\u01a6\7$\2\2\u01a6\u01a9\7$\2\2\u01a7"+
		"\u01a9\n\6\2\2\u01a8\u01a5\3\2\2\2\u01a8\u01a7\3\2\2\2\u01a9\u01ac\3\2"+
		"\2\2\u01aa\u01a8\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ad\3\2\2\2\u01ac"+
		"\u01aa\3\2\2\2\u01ad\u01ae\7$\2\2\u01aeB\3\2\2\2\u01af\u01b0\t\7\2\2\u01b0"+
		"\u01b1\n\7\2\2\u01b1\u01b2\t\7\2\2\u01b2D\3\2\2\2\u01b3\u01b4\t\b\2\2"+
		"\u01b4F\3\2\2\2\u01b5\u01b6\t\t\2\2\u01b6H\3\2\2\2\u01b7\u01be\7>\2\2"+
		"\u01b8\u01b9\7>\2\2\u01b9\u01be\7?\2\2\u01ba\u01be\7@\2\2\u01bb\u01bc"+
		"\7@\2\2\u01bc\u01be\7?\2\2\u01bd\u01b7\3\2\2\2\u01bd\u01b8\3\2\2\2\u01bd"+
		"\u01ba\3\2\2\2\u01bd\u01bb\3\2\2\2\u01beJ\3\2\2\2\u01bf\u01c0\7?\2\2\u01c0"+
		"\u01c4\7?\2\2\u01c1\u01c2\7#\2\2\u01c2\u01c4\7?\2\2\u01c3\u01bf\3\2\2"+
		"\2\u01c3\u01c1\3\2\2\2\u01c4L\3\2\2\2\u01c5\u01c6\7?\2\2\u01c6N\3\2\2"+
		"\2\u01c7\u01c8\7=\2\2\u01c8P\3\2\2\2\u01c9\u01ca\7*\2\2\u01caR\3\2\2\2"+
		"\u01cb\u01cc\7+\2\2\u01ccT\3\2\2\2\u01cd\u01ce\7\60\2\2\u01ceV\3\2\2\2"+
		"\u01cf\u01d0\7<\2\2\u01d0X\3\2\2\2\u01d1\u01d2\7~\2\2\u01d2\u01d3\7~\2"+
		"\2\u01d3Z\3\2\2\2\u01d4\u01d5\7(\2\2\u01d5\u01d6\7(\2\2\u01d6\\\3\2\2"+
		"\2\u01d7\u01d8\7#\2\2\u01d8^\3\2\2\2\u01d9\u01da\7.\2\2\u01da`\3\2\2\2"+
		"\u01db\u01df\t\n\2\2\u01dc\u01de\t\13\2\2\u01dd\u01dc\3\2\2\2\u01de\u01e1"+
		"\3\2\2\2\u01df\u01dd\3\2\2\2\u01df\u01e0\3\2\2\2\u01e0b\3\2\2\2\u01e1"+
		"\u01df\3\2\2\2\20\2\u0140\u014e\u0156\u017a\u0186\u018d\u019d\u01a2\u01a8"+
		"\u01aa\u01bd\u01c3\u01df\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}