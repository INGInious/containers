
-- Copyright (C) 2000-2002 The University of Cincinnati.  
-- All rights reserved. 

-- This file is part of VESTs (Vhdl tESTs).

-- UC MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
-- SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
-- IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
-- OR NON-INFRINGEMENT.  UC SHALL NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY
-- LICENSEE AS A RESULT OF USING, RESULT OF USING, MODIFYING OR
-- DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.

-- By using or copying this Software, Licensee agrees to abide by the
-- intellectual property laws, and all other applicable laws of the U.S.,
-- and the terms of this license.

-- You may modify, distribute, and use the software contained in this
-- package under the terms of the "GNU GENERAL PUBLIC LICENSE" version 2,
-- June 1991. A copy of this license agreement can be found in the file
-- "COPYING", distributed with this archive.

-- You should have received a copy of the GNU General Public License
-- along with VESTs; if not, write to the Free Software Foundation,
-- Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 

-- ---------------------------------------------------------------------
--
-- $Id: test186.ams,v 1.2 2003-08-05 15:14:24 paw Exp $
-- $Revision: 1.2 $
--
-- ---------------------------------------------------------------------

PACKAGE electricalSystem IS
    subtype voltage is real ;
    subtype current is real ;

   NATURE electrical IS voltage ACROSS current THROUGH Ground reference;
   --NATURE electrical IS real ACROSS real THROUGH Ground reference;
   NATURE electrical_vector is array(natural range<>) of electrical ;
   --type real_vector is array(natural range<>) of voltage ;
   subnature el_vec is electrical_vector(0 to 100);
   FUNCTION SIN(X : real) RETURN real;
END PACKAGE electricalSystem;

use work.electricalsystem.all;
  
--entity declaration

ENTITY RLC IS
   
END RLC;

--architecture declaration

ARCHITECTURE behavior  OF RLC IS

    
   terminal n1 : electrical; 
   terminal n2: el_vec;
   
   quantity vr1 across ir1 through n1 to n2;
   quantity vr2 across ir2 through n2 to ground;
   quantity vs across n1 ;
   constant r1 : REAL := 20.0;
   constant r2 : REAL := 10.0;


BEGIN

res1 : vr1 == ir1 * r1;
res2 : vr2 == ir2 * r2;
vsrc : vs  == 5.0 * sin(2.0 * 3.1415 * 10.0 --sine source
                              * real(time'pos(now)) * 1.0e-9);

END architecture behavior;
